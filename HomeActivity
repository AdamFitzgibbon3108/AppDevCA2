package com.example.appdevca2;

import android.os.Bundle;
import android.text.TextUtils;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.HashMap;

public class HomeActivity extends AppCompatActivity {

    private EditText nameField, dobField, bookNameField, reviewField;
    private RadioGroup statusRadioGroup;
    private Button updateProfileButton, addBookButton, updateBookButton;
    private DatabaseReference databaseReference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);

        // Initialize Firebase reference
        databaseReference = FirebaseDatabase.getInstance().getReference();

        // Initialize views
        nameField = findViewById(R.id.nameField);
        dobField = findViewById(R.id.dobField);
        bookNameField = findViewById(R.id.bookNameField);
        reviewField = findViewById(R.id.reviewField);
        statusRadioGroup = findViewById(R.id.statusRadioGroup);

        updateProfileButton = findViewById(R.id.updateProfileButton);
        addBookButton = findViewById(R.id.addBookButton);
        updateBookButton = findViewById(R.id.updateBookButton);

        // Set listeners for buttons
        updateProfileButton.setOnClickListener(view -> updateProfile());
        addBookButton.setOnClickListener(view -> addBook());
        updateBookButton.setOnClickListener(view -> updateBookDetails());
    }

    private void updateProfile() {
        String name = nameField.getText().toString().trim();
        String dob = dobField.getText().toString().trim();

        if (TextUtils.isEmpty(name) || TextUtils.isEmpty(dob)) {
            Toast.makeText(this, "Please fill out all fields", Toast.LENGTH_SHORT).show();
            return;
        }

        HashMap<String, String> profileData = new HashMap<>();
        profileData.put("name", name);
        profileData.put("dob", dob);

        databaseReference.child("profiles").child("user1") // Replace with dynamic user ID if available
                .setValue(profileData)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        Toast.makeText(this, "Profile updated successfully", Toast.LENGTH_SHORT).show();
                    } else {
                        Toast.makeText(this, "Failed to update profile", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void addBook() {
        String bookName = bookNameField.getText().toString().trim();
        String review = reviewField.getText().toString().trim();
        int selectedStatusId = statusRadioGroup.getCheckedRadioButtonId();

        if (TextUtils.isEmpty(bookName)) {
            Toast.makeText(this, "Please enter a book name", Toast.LENGTH_SHORT).show();
            return;
        }

        String status = (selectedStatusId == R.id.statusFinished) ? "Finished" : "In Progress";

        Book newBook = new Book(bookName, review, status);

        databaseReference.child("books").push()
                .setValue(newBook)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        Toast.makeText(this, "Book added successfully", Toast.LENGTH_SHORT).show();
                    } else {
                        Toast.makeText(this, "Failed to add book", Toast.LENGTH_SHORT).show();
                    }
                });
    }

    private void updateBookDetails() {
        String bookName = bookNameField.getText().toString().trim();
        String review = reviewField.getText().toString().trim();
        int selectedStatusId = statusRadioGroup.getCheckedRadioButtonId();

        if (TextUtils.isEmpty(bookName)) {
            Toast.makeText(this, "Please enter a book name to update", Toast.LENGTH_SHORT).show();
            return;
        }

        String status = (selectedStatusId == R.id.statusFinished) ? "Finished" : "In Progress";

        databaseReference.child("books")
                .get()
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful() && task.getResult() != null) {
                        boolean bookFound = false;
                        for (DataSnapshot snapshot : task.getResult().getChildren()) {
                            Book book = snapshot.getValue(Book.class);
                            if (book != null && book.getName().equals(bookName)) {
                                bookFound = true;
                                snapshot.getRef().updateChildren(new HashMap<String, Object>() {{
                                    put("review", review);
                                    put("status", status);
                                }});
                                Toast.makeText(HomeActivity.this, "Book updated successfully", Toast.LENGTH_SHORT).show();
                                break;
                            }
                        }
                        if (!bookFound) {
                            Toast.makeText(HomeActivity.this, "Book not found", Toast.LENGTH_SHORT).show();
                        }
                    } else {
                        Toast.makeText(HomeActivity.this, "Error fetching books", Toast.LENGTH_SHORT).show();
                    }
                });
    }
}
